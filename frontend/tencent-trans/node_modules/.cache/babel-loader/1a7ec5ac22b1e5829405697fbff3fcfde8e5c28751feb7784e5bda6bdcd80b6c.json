{"ast":null,"code":"var _jsxFileName = \"/home/jese--ki/projects/Tests_Project/Tencent_Trans/fastapi/frontend/tencent-trans/src/components/output.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Output({\n  onUpdata\n}) {\n  _s();\n  const [output, setOutput] = useState(\"\");\n  // 用于更新输出的函数\n  const updateOutput = newOutput => {\n    setOutput(newOutput);\n  };\n\n  // 当组件加载时，将更新函数传递给父组件\n  useEffect(() => {\n    onUpdate(updateOutput);\n  }, [onUpdate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'none'\n      },\n      children: \"\\u7FFB\\u8BD1\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"text_container\",\n      placeholder: \"\\u8FD9\\u91CC\\u662F\\u7B49\\u4F1A\\u7FFB\\u8BD1\\u540E\\u7684\\u6587\\u672C\",\n      readOnly: true,\n      id: \"output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(Output, \"uJOYq519CvYupHbWVd+rTHHZXsQ=\");\n_c = Output;\nvar _c;\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Output","onUpdata","_s","output","setOutput","updateOutput","newOutput","useEffect","onUpdate","className","children","style","display","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","readOnly","id","_c","$RefreshReg$"],"sources":["/home/jese--ki/projects/Tests_Project/Tencent_Trans/fastapi/frontend/tencent-trans/src/components/output.js"],"sourcesContent":["import React , {useState} from \"react\";\n\nexport default function Output ({onUpdata}) {\n    const [output, setOutput] = useState(\"\");\n    // 用于更新输出的函数\n    const updateOutput = (newOutput) => {\n        setOutput(newOutput);\n    };\n\n    // 当组件加载时，将更新函数传递给父组件\n    useEffect(() => {\n        onUpdate(updateOutput);\n    }, [onUpdate]);\n    return (\n        <div className=\"container\">\n            <div style={{display:'none'}}>翻译中...</div>\n            <textarea className='text_container' placeholder=\"这里是等会翻译后的文本\" readOnly id=\"output\"/>\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,MAAMA,CAAE;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA,MAAMQ,YAAY,GAAIC,SAAS,IAAK;IAChCF,SAAS,CAACE,SAAS,CAAC;EACxB,CAAC;;EAED;EACAC,SAAS,CAAC,MAAM;IACZC,QAAQ,CAACH,YAAY,CAAC;EAC1B,CAAC,EAAE,CAACG,QAAQ,CAAC,CAAC;EACd,oBACIT,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBX,OAAA;MAAKY,KAAK,EAAE;QAACC,OAAO,EAAC;MAAM,CAAE;MAAAF,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CjB,OAAA;MAAUU,SAAS,EAAC,gBAAgB;MAACQ,WAAW,EAAC,oEAAa;MAACC,QAAQ;MAACC,EAAE,EAAC;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEd;AAACd,EAAA,CAjBuBF,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}